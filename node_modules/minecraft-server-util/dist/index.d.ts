import { status } from './status';
import { statusFE01FA } from './statusFE01FA';
import { statusFE01 } from './statusFE01';
import { statusFE } from './statusFE';
import { statusBedrock } from './statusBedrock';
import { query } from './query';
import { queryFull } from './queryFull';
import Description from './structure/Description';
import Packet from './structure/Packet';
import { RCON } from './structure/RCON';
import TCPSocket from './structure/TCPSocket';
import UDPSocket from './structure/UDPSocket';
import { StatusOptions } from './model/Options';
import { StatusResponse } from './model/StatusResponse';
/**
 * Retrieves the status of the server by using the 1.7+ format.
 * @param {string} host The host of the server
 * @param {StatusOptions} [options] The options to use when retrieving the status
 * @returns {Promise<StatusResponse>} The status information of the server
 * @async
 * @deprecated Use `{@see #status}` instead
 */
declare function ping(host: string, options?: StatusOptions): Promise<StatusResponse>;
/**
 * Retrieves the status of the server by using the 1.6.1 - 1.6.4 format.
 * @param {string} host The host of the server
 * @param {StatusOptions} [options] The options to use when retrieving the status
 * @returns {Promise<StatusResponse>} The status information of the server
 * @async
 * @deprecated Use `statusFE01FA()` instead
 */
declare function pingFE01FA(host: string, options?: StatusOptions): Promise<StatusResponse>;
/**
 * Retrieves the status of the server by using the 1.4.2 - 1.5.2 format.
 * @param {string} host The host of the server
 * @param {StatusOptions} [options] The options to use when retrieving the status
 * @returns {Promise<StatusResponse>} The status information of the server
 * @async
 * @deprecated Use `statusFE01()` instead
 */
declare function pingFE01(host: string, options?: StatusOptions): Promise<StatusResponse>;
/**
 * Retrieves the status of the server by using the Beta 1.8 - 1.3.2 format.
 * @param {string} host The host of the server
 * @param {StatusOptions} [options] The options to use when retrieving the status
 * @returns {Promise<StatusResponse>} The status information of the server
 * @async
 * @deprecated Use `statusFE()` instead
 */
declare function pingFE(host: string, options?: StatusOptions): Promise<StatusResponse>;
declare const _default: {
    ping: typeof ping;
    pingFE01FA: typeof pingFE01FA;
    pingFE01: typeof pingFE01;
    pingFE: typeof pingFE;
    status: typeof status;
    statusFE01FA: typeof statusFE01FA;
    statusFE01: typeof statusFE01;
    statusFE: typeof statusFE;
    statusBedrock: typeof statusBedrock;
    query: typeof query;
    queryFull: typeof queryFull;
    Description: typeof Description;
    Packet: typeof Packet;
    RCON: typeof RCON;
    TCPSocket: typeof TCPSocket;
    UDPSocket: typeof UDPSocket;
};
export = _default;
